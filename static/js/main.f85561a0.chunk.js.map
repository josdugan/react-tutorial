{"version":3,"sources":["Form.js","Table.js","App.js","index.js"],"names":["Form","initialState","name","job","state","handleChange","event","target","value","setState","submitForm","props","handleSubmit","this","htmlForm","type","id","onChange","htmlFor","onClick","Component","TableHeader","TableBody","rows","characterData","map","row","index","removeCharacter","Table","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"+NAsCeA,E,4MAnCXC,aAAe,CACXC,KAAM,GACNC,IAAK,I,EAGTC,MAAQ,EAAKH,a,EAEbI,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBL,EADe,EACfA,KAAMM,EADS,EACTA,MAEb,EAAKC,SAAL,eACKP,EAAOM,K,EAIhBE,WAAa,WACT,EAAKC,MAAMC,aAAa,EAAKR,OAC7B,EAAKK,SAAS,EAAKR,e,uDAGb,IAAD,EACiBY,KAAKT,MAAnBF,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,iCACI,uBAAOW,SAAS,OAAhB,kBACA,uBAAOC,KAAK,OAAOb,KAAK,OAAOc,GAAG,OAAOR,MAAON,EAAMe,SAAUJ,KAAKR,eACrE,uBAAOa,QAAQ,MAAf,iBACA,uBAAOH,KAAK,OAAOb,KAAK,MAAMc,GAAG,MAAMR,MAAOL,EAAKc,SAAUJ,KAAKR,eAClE,uBAAOU,KAAK,SAASP,MAAM,SAASW,QAASN,KAAKH,oB,GA9B/CU,aCAbC,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,2CAMVC,EAAY,SAACX,GACf,IAAMY,EAAOZ,EAAMa,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIxB,OACT,6BAAKwB,EAAIvB,MACT,6BACI,wBAAQgB,QAAS,kBAAMR,EAAMiB,gBAAgBD,IAA7C,wBAJCA,MAUjB,OACI,gCAAQJ,KAeDM,EAXD,SAAClB,GAAW,IACda,EAAmCb,EAAnCa,cAAeI,EAAoBjB,EAApBiB,gBAEvB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWJ,cAAeA,EAAeI,gBAAiBA,QCDvDE,E,4MA9BX1B,MAAQ,CACJ2B,WAAY,I,EAGhBH,gBAAkB,SAACD,GAAW,IACnBI,EAAc,EAAK3B,MAAnB2B,WAEP,EAAKtB,SAAS,CACVsB,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMP,Q,EAKzBf,aAAe,SAACqB,GACZ,EAAKxB,SAAS,CAACsB,WAAW,GAAD,mBAAM,EAAK3B,MAAM2B,YAAjB,CAA6BE,O,uDAGhD,IACCF,EAAclB,KAAKT,MAAnB2B,WAEP,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAOX,cAAeO,EAAYH,gBAAiBf,KAAKe,kBACxD,cAAC,EAAD,CAAMhB,aAAcC,KAAKD,sB,GA1BvBQ,a,MCClBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f85561a0.chunk.js","sourcesContent":["import {Component} from 'react';\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: '',\n    };\n\n    state = this.initialState;\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    };\n\n    render() {\n        const { name, job } = this.state;\n\n        return (\n            <form>\n                <label htmlForm=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    };\n}\n\nexport default Form;\n","import { Component } from 'react';\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n};\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <tbody>{rows}</tbody>\n    );\n};\n\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props;\n\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    );\n};\n\nexport default Table;\n","import { Component } from 'react';\nimport Form from './Form';\nimport Table from './Table';\n\nclass App extends Component {\n\n    state = {\n        characters: [],\n    };\n\n    removeCharacter = (index) => {\n        const {characters} = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            })\n        });\n    };\n\n    handleSubmit = (character) => {\n        this.setState({characters: [...this.state.characters, character]});\n    };\n\n    render() {\n        const {characters} = this.state;\n\n        return (\n            <div className=\"container\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}